/**
 * <%= filename %>
 *
 * @description :: Send a custom response.
 * @docs        :: http://sailsjs.com/docs/concepts/custom-responses
 *
 * Usage:
 * ```
 * return res.<%= id %>()
 * return res.<%= id %>(data)
 * ```
 *
 * @param  {JSON?} data
 */

module.exports = function res<%= _.capitalize(id) %>(data) {

  // Get access to `req` and `res`
  var req = this.req;
  var res = this.res;

  // Define the status code to send in the response.
  var statusCodeToSet = 400;

  // Log a message, if desired.
  sails.log('Ran custom response: res.<%= id %>()');

  // If no data was provided, use res.sendStatus().
  if (_.isUndefined(data)) {
    return res.sendStatus(statusCodeToSet);
  }

  // If the data is an Error instance, then log it as verbose (just in case it's important.)
  // Also, if it doesn't have a custom .toJSON(), use its stack instead (otherwise res.json() will turn it into an empty dictionary).
  // (But if this is running in a production environment, don't send it at all.)
  if (_.isError(data)) {
    sails.log.verbose('Custom response `res.<%= id %>()` called with an Error:', data);

    if (!_.isFunction(data.toJSON)) {
      if (process.env.NODE_ENV === 'production') {
        return res.sendStatus(statusCodeToSet);
      }
      else {
        res.status(statusCodeToSet);
        return res.send(data.stack);
      }
    }
  }

  // Set status code and send response data.
  res.status(statusCodeToSet);
  return res.json(data);

};
